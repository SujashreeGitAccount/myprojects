{"ast":null,"code":"const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\n\nconst loginReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_LOGIN_Load':\n      return state;\n\n    case 'SET_LOGIN_SUCCESS':\n      return !!state;\n\n    case 'SET_LOGIN_ERROR':\n      return state;\n\n    default:\n      return state;\n  }\n}; //const loginReducer = () => (state = {\n//    isLoginPending: false,\n//    isLoginSuccess: false,\n//    loginError: null\n//}, action: { type: any; isLoginPending: boolean; isLoginSuccess: boolean; loginError: any; }) => {\n//    switch (action.type) {\n//        case SET_LOGIN_PENDING:\n//            return Object.assign({}, state, {\n//                isLoginPending: action.isLoginPending\n//            });\n//        case SET_LOGIN_SUCCESS:\n//            return Object.assign({}, state, {\n//                isLoginSuccess: action.isLoginSuccess\n//            });\n//        case SET_LOGIN_ERROR:\n//            return Object.assign({}, state, {\n//                loginError: action.loginError\n//            });\n//        default:\n//            return state;\n//    }\n//}\n\n\nexport default loginReducer;","map":{"version":3,"sources":["E:/login/src/reducer/login/loginReducer.tsx"],"names":["SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","loginReducer","state","action","type"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;;AAEA,MAAMC,YAAY,GAAE,CAACC,KAAK,GAAE,KAAR,EAAeC,MAAf,KAA8B;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,gBAAL;AACI,aAAOF,KAAP;;AAEJ,SAAK,mBAAL;AACI,aAAO,CAAC,CAACA,KAAT;;AAEJ,SAAK,iBAAL;AACI,aAAOA,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAZR;AAcH,CAfD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA,eAAeD,YAAf","sourcesContent":["const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\nconst loginReducer =(state =false, action:any) => {\r\n    switch (action.type) {\r\n\r\n        case 'SET_LOGIN_Load':\r\n            return state;\r\n\r\n        case 'SET_LOGIN_SUCCESS':\r\n            return !!state;\r\n\r\n        case 'SET_LOGIN_ERROR':\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//const loginReducer = () => (state = {\r\n//    isLoginPending: false,\r\n//    isLoginSuccess: false,\r\n//    loginError: null\r\n//}, action: { type: any; isLoginPending: boolean; isLoginSuccess: boolean; loginError: any; }) => {\r\n//    switch (action.type) {\r\n//        case SET_LOGIN_PENDING:\r\n//            return Object.assign({}, state, {\r\n//                isLoginPending: action.isLoginPending\r\n//            });\r\n//        case SET_LOGIN_SUCCESS:\r\n//            return Object.assign({}, state, {\r\n//                isLoginSuccess: action.isLoginSuccess\r\n//            });\r\n\r\n//        case SET_LOGIN_ERROR:\r\n//            return Object.assign({}, state, {\r\n//                loginError: action.loginError\r\n//            });\r\n\r\n//        default:\r\n//            return state;\r\n//    }\r\n//}\r\n\r\n\r\nexport default loginReducer;"]},"metadata":{},"sourceType":"module"}