{"ast":null,"code":"var _jsxFileName = \"E:\\\\login\\\\src\\\\components\\\\Login.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { createStore } from 'redux'; //REDUCER\n\nconst authReducer = () => (state = {\n  isLoginSuccess: false,\n  loginError: null\n}, action) => {\n  switch (action.type) {\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n}; //STORE\n\n\nlet store = createStore(authReducer); //ACTION\n\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n} //DISPATCH\n\n\nstore.dispatch(setLoginPending(true));\nstore.dispatch(setLoginSuccess(false));\nstore.dispatch(setLoginError(false));\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: 'center',\n    background: '#212121',\n    color: '#fff'\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [helperText, setHelperText] = useState('');\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (username.trim() && password.trim()) {\n      setIsButtonDisabled(false);\n    } else {\n      setIsButtonDisabled(true);\n    }\n  }, [username, password]);\n\n  const handleLogin = () => {\n    store.dispatch(setLoginPending(true));\n    store.dispatch(setLoginSuccess(false));\n    store.dispatch(setLoginError(null));\n    setHelperText('Please wait...');\n    callLoginApi(username, password, error => {\n      store.dispatch(setLoginPending(false));\n\n      if (!error) {\n        store.dispatch(setLoginSuccess(true));\n        setHelperText('Login Successfully');\n      } else {\n        store.dispatch(setLoginError(error));\n        setHelperText('Error');\n      }\n    });\n  };\n\n  function callLoginApi(username, password, callback) {\n    setTimeout(() => {\n      if (username === 'abc@email.com' && password === 'password') {\n        return callback(null);\n      } else {\n        return callback(new Error('Invalid email and password'));\n      }\n    }, 1000);\n  }\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.header,\n    title: \"Login App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"username\",\n    type: \"email\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    margin: \"normal\",\n    onChange: e => setUsername(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    margin: \"normal\",\n    helperText: helperText,\n    onChange: e => setPassword(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    className: classes.loginBtn,\n    onClick: () => handleLogin(),\n    disabled: isButtonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, \"Login\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["E:/login/src/components/Login.tsx"],"names":["React","useState","useEffect","TextField","createStyles","makeStyles","Card","CardContent","CardActions","Button","CardHeader","createStore","authReducer","state","isLoginSuccess","loginError","action","type","SET_LOGIN_SUCCESS","Object","assign","SET_LOGIN_ERROR","store","SET_LOGIN_PENDING","setLoginPending","isLoginPending","setLoginSuccess","setLoginError","dispatch","useStyles","theme","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","Login","classes","username","setUsername","password","setPassword","isButtonDisabled","setIsButtonDisabled","helperText","setHelperText","error","setError","trim","handleLogin","callLoginApi","callback","setTimeout","Error","handleKeyPress","e","keyCode","which","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { browserHistory } from 'react-router';\r\nimport { createStore } from 'redux';\r\n\r\n\r\n//REDUCER\r\nconst authReducer = () => (state = {\r\n    isLoginSuccess: false,\r\n    loginError: null\r\n}, action: { type: any; isLoginSuccess: any; loginError: any; }) => {\r\n    switch (action.type) {\r\n        case SET_LOGIN_SUCCESS:\r\n            return Object.assign({}, state, {\r\n                isLoginSuccess: action.isLoginSuccess\r\n            });\r\n\r\n        case SET_LOGIN_ERROR:\r\n            return Object.assign({}, state, {\r\n                loginError: action.loginError\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//STORE\r\nlet store = createStore(authReducer);\r\n\r\n\r\n//ACTION\r\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\nfunction setLoginPending(isLoginPending: boolean) {\r\n    return {\r\n        type: SET_LOGIN_PENDING,\r\n        isLoginPending\r\n    };\r\n}\r\n\r\nfunction setLoginSuccess(isLoginSuccess: boolean) {\r\n    return {\r\n        type: SET_LOGIN_SUCCESS,\r\n        isLoginSuccess\r\n    };\r\n}\r\n\r\nfunction setLoginError(loginError: any) {\r\n    return {\r\n        type: SET_LOGIN_ERROR,\r\n        loginError\r\n    };\r\n}\r\n\r\n//DISPATCH\r\nstore.dispatch(setLoginPending(true));\r\nstore.dispatch(setLoginSuccess(false));\r\nstore.dispatch(setLoginError(false));\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            width: 400,\r\n            margin: `${theme.spacing(0)} auto`\r\n        },\r\n        loginBtn: {\r\n            marginTop: theme.spacing(2),\r\n            flexGrow: 1\r\n        },\r\n        header: {\r\n            textAlign: 'center',\r\n            background: '#212121',\r\n            color: '#fff'\r\n        },\r\n        card: {\r\n            marginTop: theme.spacing(10)\r\n        }\r\n\r\n    }),\r\n);\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n    const [helperText, setHelperText] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (username.trim() && password.trim()) {\r\n            setIsButtonDisabled(false);\r\n        } else {\r\n            setIsButtonDisabled(true);\r\n        }\r\n    }, [username, password]);\r\n\r\n    const handleLogin = () => {\r\n\r\n        store.dispatch(setLoginPending(true));\r\n        store.dispatch(setLoginSuccess(false));\r\n        store.dispatch(setLoginError(null));\r\n        setHelperText('Please wait...');\r\n        callLoginApi(username, password, (error:any) => {\r\n            store.dispatch(setLoginPending(false));\r\n            if (!error) {\r\n                store.dispatch(setLoginSuccess(true));\r\n                setHelperText('Login Successfully');\r\n            } else {\r\n                store.dispatch(setLoginError(error));\r\n                setHelperText('Error');\r\n            }\r\n        });\r\n\r\n       \r\n    };\r\n    function callLoginApi(username: string, password: string, callback:any) {\r\n        setTimeout(() => {\r\n            \r\n            if (username === 'abc@email.com' && password === 'password') {\r\n                \r\n                return callback(null);\r\n            } else {\r\n                return callback(new Error('Invalid email and password'));\r\n            }\r\n        }, 1000);\r\n    }\r\n        \r\n\r\n    const handleKeyPress = (e: any) => {\r\n        if (e.keyCode === 13 || e.which === 13) {\r\n            isButtonDisabled || handleLogin();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n                <Card className={classes.card}>\r\n                    <CardHeader className={classes.header} title=\"Login App\" />\r\n                    <CardContent>\r\n                        <div>\r\n                            <TextField\r\n                                error={error}\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                type=\"email\"\r\n                                label=\"Username\"\r\n                                placeholder=\"Username\"\r\n                                margin=\"normal\"\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                onKeyPress={(e) => handleKeyPress(e)}\r\n                            />\r\n                            <TextField\r\n                                error={error}\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                margin=\"normal\"\r\n                                helperText={helperText}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                onKeyPress={(e) => handleKeyPress(e)}\r\n                            />\r\n                        </div>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            color=\"secondary\"\r\n                            className={classes.loginBtn}\r\n                            onClick={() => handleLogin()}\r\n                            disabled={isButtonDisabled}>\r\n                            Login\r\n                        </Button>\r\n                    </CardActions>\r\n\r\n                </Card>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}