{"ast":null,"code":"var _jsxFileName = \"E:\\\\login\\\\src\\\\components\\\\FetchTableData.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport classes from '*.module.css';\nimport { Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\n\nfunction FetchTableData() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [post, setPost] = useState({});\n  useEffect(() => {\n    axios.get('http://dummy.restapiexample.com/api/v1/employees').then(response => {\n      setLoading(false);\n      setPost(response.data);\n      setError('');\n    }).catch(error => {\n      setLoading(false);\n      setPost({});\n      setError('Something went wrong');\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Employee List\"), /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Employee Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Salary\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Age\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, post.map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, row.protein));\n  }))));\n}\n\nexport default FetchTableData;","map":{"version":3,"sources":["E:/login/src/components/FetchTableData.tsx"],"names":["React","useState","useEffect","axios","classes","Paper","Table","TableBody","TableCell","TableHead","TableRow","FetchTableData","loading","setLoading","error","setError","post","setPost","get","then","response","data","catch","root","table","map","row","id","name","calories","fat","carbs","protein"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport classes from '*.module.css';\r\nimport {\r\n    createStyles,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Theme,\r\n    withStyles,\r\n    WithStyles,\r\n} from '@material-ui/core';\r\n\r\n\r\nfunction FetchTableData() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [post, setPost] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('http://dummy.restapiexample.com/api/v1/employees')\r\n            .then(response => {\r\n                setLoading(false)\r\n                setPost(response.data)\r\n                setError('')\r\n            })\r\n            .catch(error => {\r\n                setLoading(false)\r\n                setPost({})\r\n                setError('Something went wrong')\r\n            })\r\n    },[])\r\n    return (\r\n        \r\n             <Paper className={classes.root}>\r\n            <p>Employee List</p>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell>Employee Name</TableCell>\r\n                        <TableCell>Salary</TableCell>\r\n                        <TableCell>Age</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {post.map(row => {\r\n                        return (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell>{row.calories}</TableCell>\r\n                                <TableCell>{row.fat}</TableCell>\r\n                                <TableCell>{row.carbs}</TableCell>\r\n                                <TableCell>{row.protein}</TableCell>\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n            \r\n        );\r\n}\r\nexport default FetchTableData;"]},"metadata":{},"sourceType":"module"}