{"ast":null,"code":"var _jsxFileName = \"E:\\\\login\\\\src\\\\components\\\\dashboard\\\\Dashboard.tsx\";\nimport { createStyles, withStyles } from '@material-ui/core';\nimport React from 'react';\nimport FetchTableData from './FetchTableData';\nimport { useSelector } from 'react-redux';\nlet id = 0;\n\nconst createData = (name, calories, fat, carbs, protein) => {\n  id += 1;\n  return {\n    id,\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n};\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nconst styles = theme => createStyles({\n  root: {\n    width: '100%',\n    marginTop: 3,\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\n// Here's the component, a stateless functional component that expects to receive props that match\n// the 'Props' interface. Since it is an SFC we don't write 'this.props', it is just 'props'.\nconst Dashboard = props => {\n  const {\n    classes\n  } = props;\n  const dashboard = useSelector(state => state.dashboardData);\n  return /*#__PURE__*/React.createElement(FetchTableData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  });\n}; // instrument the component with the CSS styles defined above, and export it.\n\n\nexport default withStyles(styles)(Dashboard);","map":{"version":3,"sources":["E:/login/src/components/dashboard/Dashboard.tsx"],"names":["createStyles","withStyles","React","FetchTableData","useSelector","id","createData","name","calories","fat","carbs","protein","rows","styles","theme","root","width","marginTop","overflowX","table","minWidth","Dashboard","props","classes","dashboard","state","dashboardData"],"mappings":";AAAA,SACIA,YADJ,EASIC,UATJ,QAWO,mBAXP;AAYA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAQC,cAAR,MAA6B,kBAA7B;AACA,SAASC,WAAT,QAAyC,aAAzC;AAEA,IAAIC,EAAE,GAAG,CAAT;;AACA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAeC,QAAf,EAAiCC,GAAjC,EAA8CC,KAA9C,EAA6DC,OAA7D,KAAiF;AAChGN,EAAAA,EAAE,IAAI,CAAN;AACA,SAAO;AAAEA,IAAAA,EAAF;AAAME,IAAAA,IAAN;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,GAAtB;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,GAAP;AACH,CAHD;;AAMA,MAAMC,IAAI,GAAG,CACTN,UAAU,CAAC,gBAAD,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,EAA7B,EAAiC,GAAjC,CADD,EAETA,UAAU,CAAC,oBAAD,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,GAArC,CAFD,EAGTA,UAAU,CAAC,QAAD,EAAW,GAAX,EAAgB,IAAhB,EAAsB,EAAtB,EAA0B,GAA1B,CAHD,EAITA,UAAU,CAAC,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,EAAtB,EAA0B,GAA1B,CAJD,EAKTA,UAAU,CAAC,aAAD,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,EAA3B,EAA+B,GAA/B,CALD,CAAb;;AASA,MAAMO,MAAM,GAAIC,KAAD,IACXd,YAAY,CAAC;AACTe,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,SAAS,EAAE,CAFT;AAGFC,IAAAA,SAAS,EAAE;AAHT,GADG;AAMTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP;AANE,CAAD,CADhB;;AAiBA;AACA;AACA,MAAMC,SAA2B,GAAGC,KAAK,IAAI;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAME,SAAS,GAAGpB,WAAW,CAAEqB,KAAD,IAAgBA,KAAK,CAACC,aAAvB,CAA7B;AAEA,sBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CARD,C,CAUA;;;AACA,eAAezB,UAAU,CAACY,MAAD,CAAV,CAAmBQ,SAAnB,CAAf","sourcesContent":["import {\r\n    createStyles,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Theme,\r\n    withStyles,\r\n    WithStyles,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport  FetchTableData  from './FetchTableData';\r\nimport { useSelector, useDispatch } from 'react-redux'; \r\n\r\nlet id = 0;\r\nconst createData = (name: string, calories: number, fat: number, carbs: number, protein: number) => {\r\n    id += 1;\r\n    return { id, name, calories, fat, carbs, protein };\r\n};\r\n\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\n\r\nconst styles = (theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            marginTop: 3,\r\n            overflowX: 'auto',\r\n        },\r\n        table: {\r\n            minWidth: 700,\r\n        },\r\n    });\r\n\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n    hi: string;\r\n}\r\n\r\n// Here's the component, a stateless functional component that expects to receive props that match\r\n// the 'Props' interface. Since it is an SFC we don't write 'this.props', it is just 'props'.\r\nconst Dashboard: React.SFC<Props> = props => {\r\n    const { classes } = props;\r\n\r\n    const dashboard = useSelector((state: any) => state.dashboardData);\r\n\r\n    return (\r\n        <FetchTableData />\r\n    );\r\n};\r\n\r\n// instrument the component with the CSS styles defined above, and export it.\r\nexport default withStyles(styles)(Dashboard);"]},"metadata":{},"sourceType":"module"}