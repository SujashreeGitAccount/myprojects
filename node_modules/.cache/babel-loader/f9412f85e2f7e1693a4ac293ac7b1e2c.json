{"ast":null,"code":"var _jsxFileName = \"E:\\\\login\\\\src\\\\components\\\\login\\\\Login.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { browserHistory } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setLogin, setLoginError } from '../../actions';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: 'center',\n    background: '#212121',\n    color: '#fff'\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [helperText, setHelperText] = useState('');\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (username.trim() && password.trim()) {\n      setIsButtonDisabled(false);\n    } else {\n      setIsButtonDisabled(true);\n    }\n  }, [username, password]);\n  const dispatch = useDispatch(); //......dispatch added to call actions\n\n  const logstate = useSelector(state => state.isLogged);\n\n  const handleLogin = () => {\n    //dispatch(setLoginLoad());\n    setHelperText('Please wait...');\n    axios.get(\"https://localhost:44391/api/Auth?username=\" + username + \"&password=\" + password).then(response => {\n      console.log(response.data);\n\n      if (response.data !== \"Invalid credentials\") {\n        dispatch(setLogin(response.data));\n        setError(false);\n        setHelperText('Login Successfully');\n        browserHistory.push(\"/Dashboard\");\n      } else {\n        setError(true);\n        dispatch(setLoginError());\n        setHelperText('Incorrect username or password');\n      }\n    }).catch(error => {});\n    /*callLoginApi(username, password, (error: any) => {\r\n         \r\n        setHelperText('Login status '+ logstate);\r\n          dispatch(setLoginPending(false));\r\n        if (!error) {\r\n            dispatch(setLoginSuccess(true));\r\n            setHelperText('Login Successfully');\r\n            browserHistory.push(\"/dashboard\");\r\n        } else {\r\n            dispatch(setLoginError(error));\r\n            setHelperText('Error');\r\n        }\r\n    });*/\n  };\n  /*function callLoginApi(username: string, password: string, callback:any) {\r\n      setTimeout(() => {\r\n          \r\n          if (username === 'abc@email.com' && password === 'password') {\r\n              dispatch(setLoginSuccess);\r\n              return callback(null);\r\n          } else {\r\n              dispatch(setLoginError);\r\n              return callback(new Error('Invalid email and password'));\r\n          }\r\n      }, 1000);\r\n  }*/\n\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.header,\n    title: \"Login App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"username\",\n    type: \"email\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    margin: \"normal\",\n    onChange: e => setUsername(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: error,\n    fullWidth: true,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    margin: \"normal\",\n    helperText: helperText,\n    onChange: e => setPassword(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"secondary\",\n    className: classes.loginBtn,\n    onClick: () => handleLogin(),\n    disabled: isButtonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, \"Login\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["E:/login/src/components/login/Login.tsx"],"names":["React","useState","useEffect","TextField","createStyles","makeStyles","Card","CardContent","CardActions","Button","CardHeader","browserHistory","useSelector","useDispatch","setLogin","setLoginError","axios","useStyles","theme","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","Login","classes","username","setUsername","password","setPassword","isButtonDisabled","setIsButtonDisabled","helperText","setHelperText","error","setError","trim","dispatch","logstate","state","isLogged","handleLogin","get","then","response","console","log","data","push","catch","handleKeyPress","e","keyCode","which","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { browserHistory } from 'react-router';\r\nimport { createStore } from 'redux';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { setLogin, setLoginError } from '../../actions';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            width: 400,\r\n            margin: `${theme.spacing(0)} auto`\r\n        },\r\n        loginBtn: {\r\n            marginTop: theme.spacing(2),\r\n            flexGrow: 1\r\n        },\r\n        header: {\r\n            textAlign: 'center',\r\n            background: '#212121',\r\n            color: '#fff'\r\n        },\r\n        card: {\r\n            marginTop: theme.spacing(10)\r\n        }\r\n\r\n    }),\r\n);\r\n\r\nconst Login = () => {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n    const [helperText, setHelperText] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (username.trim() && password.trim()) {\r\n            setIsButtonDisabled(false);\r\n        } else {\r\n            setIsButtonDisabled(true);\r\n        }\r\n    }, [username, password]);\r\n\r\n    const dispatch = useDispatch();//......dispatch added to call actions\r\n    \r\n    const logstate = useSelector((state: any) => state.isLogged);\r\n  \r\n\r\n    const handleLogin = () => {\r\n\r\n        //dispatch(setLoginLoad());\r\n        setHelperText('Please wait...');\r\n        axios.get(\"https://localhost:44391/api/Auth?username=\" + username + \"&password=\" + password)\r\n            .then(response => {\r\n                \r\n                console.log(response.data);\r\n                if (response.data !== \"Invalid credentials\") {\r\n                    dispatch(setLogin(response.data));\r\n                    \r\n                    setError(false);\r\n                    setHelperText('Login Successfully');\r\n                    browserHistory.push(\"/Dashboard\");\r\n                } else {\r\n                    setError(true);\r\n                    dispatch(setLoginError());\r\n                    setHelperText('Incorrect username or password')\r\n                }\r\n            })\r\n            .catch(error => {\r\n              \r\n            })\r\n\r\n        /*callLoginApi(username, password, (error: any) => {\r\n\r\n           \r\n            setHelperText('Login status '+ logstate);\r\n\r\n            dispatch(setLoginPending(false));\r\n            if (!error) {\r\n                dispatch(setLoginSuccess(true));\r\n                setHelperText('Login Successfully');\r\n                browserHistory.push(\"/dashboard\");\r\n            } else {\r\n                dispatch(setLoginError(error));\r\n                setHelperText('Error');\r\n            }\r\n        });*/\r\n\r\n       \r\n    };\r\n    /*function callLoginApi(username: string, password: string, callback:any) {\r\n        setTimeout(() => {\r\n            \r\n            if (username === 'abc@email.com' && password === 'password') {\r\n                dispatch(setLoginSuccess);\r\n                return callback(null);\r\n            } else {\r\n                dispatch(setLoginError);\r\n                return callback(new Error('Invalid email and password'));\r\n            }\r\n        }, 1000);\r\n    }*/\r\n\r\n\r\n    const handleKeyPress = (e: any) => {\r\n        if (e.keyCode === 13 || e.which === 13) {\r\n            isButtonDisabled || handleLogin();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n                <Card className={classes.card}>\r\n                    <CardHeader className={classes.header} title=\"Login App\" />\r\n                    <CardContent>\r\n                        <div>\r\n                            \r\n                            <TextField\r\n                                error={error}\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                type=\"email\"\r\n                                label=\"Username\"\r\n                                placeholder=\"Username\"\r\n                                margin=\"normal\"\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                onKeyPress={(e) => handleKeyPress(e)}\r\n                            />\r\n                            <TextField\r\n                                error={error}\r\n                                fullWidth\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                placeholder=\"Password\"\r\n                                margin=\"normal\"\r\n                                helperText={helperText}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                onKeyPress={(e) => handleKeyPress(e)}\r\n                            />\r\n                        </div>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            color=\"secondary\"\r\n                            className={classes.loginBtn}\r\n                            onClick={() => handleLogin()}\r\n                            disabled={isButtonDisabled}>\r\n                            Login\r\n                        </Button>\r\n                       \r\n                    </CardActions>\r\n\r\n                </Card>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}