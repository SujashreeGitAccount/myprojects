{"ast":null,"code":"var _jsxFileName = \"E:\\\\login\\\\src\\\\components\\\\FetchTableData.tsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport _ from 'lodash'; //import classes from '*.module.css';\n\nexport default class FetchTableData extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      datarecords: [],\n      datacolumns: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://dummy.restapiexample.com/api/v1/employees').then(response => {\n      this.setState({\n        datarecords: response.data\n      });\n      this.extractColumnNames();\n      console.log(this.state.datarecords);\n    }).catch(error => {});\n  }\n\n  extractColumnNames() {\n    const firstrecord = _.keys(this.state.datarecords[0]);\n\n    this.setState({\n      datacolumns: firstrecord\n    });\n    console.log(this.state.datacolumns);\n  }\n\n  displayRecords(key) {\n    const datacolumns = this.state.datacolumns;\n    return datacolumns.map(each_col => this.displayRecordName(each_col, key));\n  }\n\n  displayRecordName(colname, key) {\n    const record = this.state.datarecords[key];\n    return /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }\n    }, record[colname]);\n  }\n\n  render() {\n    const datarecords = this.state.datarecords;\n    return /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Employee List\"), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"Employee Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Salary\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"Age\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, datarecords && datarecords.map((each_datarecord, recordindex) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: each_datarecord.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    }, this.displayRecords(recordindex))))));\n  }\n\n} //export default FetchTableData;","map":{"version":3,"sources":["E:/login/src/components/FetchTableData.tsx"],"names":["React","axios","Paper","Table","TableBody","TableCell","TableHead","TableRow","_","FetchTableData","Component","state","datarecords","datacolumns","componentDidMount","get","then","response","setState","data","extractColumnNames","console","log","catch","error","firstrecord","keys","displayRecords","key","map","each_col","displayRecordName","colname","record","render","each_datarecord","recordindex","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    createStyles,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Theme,\r\n    withStyles,\r\n    WithStyles,\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\n//import classes from '*.module.css';\r\n\r\nexport interface IState {\r\n    apiurl: string;\r\n    datarecords: any[];\r\n    datacolumns: any[];\r\n}\r\nexport default class FetchTableData extends React.Component{\r\n\r\n    //constructor(props:IState) {\r\n    //    super(props);\r\n    //    this.state = {\r\n    //        apiurl:'',\r\n    //        datarecords: [],\r\n    //        datacolumns: [],\r\n    //    }\r\n    //}\r\n\r\n    state = {\r\n        datarecords: [],\r\n        datacolumns: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://dummy.restapiexample.com/api/v1/employees')\r\n            .then(response => {\r\n                this.setState({ datarecords: response.data });\r\n                this.extractColumnNames();\r\n                console.log(this.state.datarecords);\r\n            })\r\n            .catch(error => {\r\n               \r\n            })\r\n    }\r\n    private extractColumnNames() {\r\n        const firstrecord = _.keys(this.state.datarecords[0]);\r\n        this.setState({ datacolumns: firstrecord, });\r\n        console.log(this.state.datacolumns);\r\n    }\r\n    private displayRecords(key: number) {\r\n        const datacolumns = this.state.datacolumns;\r\n\r\n        return datacolumns.map((each_col) =>\r\n            this.displayRecordName(each_col, key)\r\n        )\r\n    }\r\n    private displayRecordName(colname: string, key: number) {\r\n        const record = this.state.datarecords[key];\r\n        return <th>{record[colname]}</th>\r\n    }\r\n    render() {\r\n        const datarecords = this.state.datarecords;\r\n        return(\r\n        <Paper >\r\n            <p>Employee List</p>\r\n\r\n            <Table >\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Id</TableCell>\r\n                        <TableCell>Employee Name</TableCell>\r\n                        <TableCell>Salary</TableCell>\r\n                        <TableCell>Age</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                    <TableBody>\r\n                        {datarecords && datarecords.map((each_datarecord, recordindex) =>\r\n                                    <tr key={each_datarecord.id}>\r\n                                        {this.displayRecords(recordindex)}\r\n                                    </tr>\r\n                                )}\r\n                    </TableBody>\r\n            </Table>\r\n        </Paper>\r\n            \r\n        );\r\n    }\r\n}\r\n//export default FetchTableData;"]},"metadata":{},"sourceType":"module"}