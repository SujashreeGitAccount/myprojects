{"ast":null,"code":"import axios from 'axios';\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nconst SET_DASHBOARD_ERROR = 'SET_DASHBOARD_ERROR';\nconst SET_DASHBOARD_SUCCESS = 'SET_DASHBOARD_SUCCESS'; //export const setLoginPending = (isLoginPending: boolean)=> {\n//    return {\n//        type: SET_LOGIN_PENDING,\n//        isLoginPending\n//    };\n//}\n//export const setLoginSuccess=(isLoginSuccess: boolean)=> {\n//    return {\n//        type: SET_LOGIN_SUCCESS,\n//        isLoginSuccess\n//    };\n//}\n//export const setLoginError=(loginError: any) =>{\n//    return {\n//        type: SET_LOGIN_ERROR,\n//        loginError\n//    };\n//}\n\n/*export const setLoginLoad = () => {\r\n    return {\r\n        type: 'SET_LOGIN_Load'\r\n    };\r\n}\r\n\r\nexport const setLoginSuccess = () => {\r\n    return {\r\n        type: 'SET_LOGIN_SUCCESS'\r\n    };\r\n}\r\n\r\nexport const setLoginError = () => {\r\n    return {\r\n        type: 'SET_LOGIN_ERROR'\r\n    };\r\n}*/\n\nexport function loginUser(username, password) {\n  axios.get(\"https://localhost:44391/api/Auth?username=\" + username + \"&password=\" + password).then(response => {\n    console.log(response.data);\n\n    if (response.data !== \"Invalid credentials\") {\n      const token = response.data;\n    } else {}\n  }).catch(error => {});\n  return {\n    type: 'LOGIN_USER' //payload: token\n\n  };\n}\nexport const setLogin = () => {\n  return {\n    type: 'LOGIN_USER'\n  };\n};\nexport const setLogout = () => {\n  return {\n    type: 'LOGOUT_USER'\n  };\n}; //============================DASHBOARD ACTION===========================\n\nexport const setDashboardSuccess = () => {\n  return {\n    type: SET_DASHBOARD_SUCCESS\n  };\n};\nexport const setDashboardError = () => {\n  return {\n    type: SET_DASHBOARD_ERROR\n  };\n}; //===========================COUNTER ACTION=========================\n\nexport const increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\nexport const decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n};","map":{"version":3,"sources":["E:/login/src/actions/index.tsx"],"names":["axios","SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","SET_DASHBOARD_ERROR","SET_DASHBOARD_SUCCESS","loginUser","username","password","get","then","response","console","log","data","token","catch","error","type","setLogin","setLogout","setDashboardSuccess","setDashboardError","increment","decrement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAGA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,qBAAqB,GAAG,uBAA9B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAAiCC,QAAjC,EAA+C;AAClDR,EAAAA,KAAK,CAACS,GAAN,CAAU,+CAA+CF,QAA/C,GAA0D,YAA1D,GAAyEC,QAAnF,EACKE,IADL,CACUC,QAAQ,IAAI;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;;AACA,QAAIH,QAAQ,CAACG,IAAT,KAAkB,qBAAtB,EAA6C;AACzC,YAAMC,KAAK,GAAGJ,QAAQ,CAACG,IAAvB;AACH,KAFD,MAEO,CAEN;AACJ,GATL,EAUKE,KAVL,CAUWC,KAAK,IAAI,CAEf,CAZL;AAaA,SAAO;AACHC,IAAAA,IAAI,EAAE,YADH,CAEH;;AAFG,GAAP;AAKH;AAGD,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHF,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM,C,CAKP;;AAEA,OAAO,MAAMG,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHH,IAAAA,IAAI,EAAEb;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMiB,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHJ,IAAAA,IAAI,EAAEd;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMmB,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHL,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMM,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHN,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\r\n\r\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\n\r\nconst SET_DASHBOARD_ERROR = 'SET_DASHBOARD_ERROR';\r\nconst SET_DASHBOARD_SUCCESS = 'SET_DASHBOARD_SUCCESS';\r\n\r\n\r\n//export const setLoginPending = (isLoginPending: boolean)=> {\r\n//    return {\r\n//        type: SET_LOGIN_PENDING,\r\n//        isLoginPending\r\n//    };\r\n//}\r\n\r\n//export const setLoginSuccess=(isLoginSuccess: boolean)=> {\r\n//    return {\r\n//        type: SET_LOGIN_SUCCESS,\r\n//        isLoginSuccess\r\n//    };\r\n//}\r\n\r\n//export const setLoginError=(loginError: any) =>{\r\n//    return {\r\n//        type: SET_LOGIN_ERROR,\r\n//        loginError\r\n//    };\r\n//}\r\n\r\n/*export const setLoginLoad = () => {\r\n    return {\r\n        type: 'SET_LOGIN_Load'\r\n    };\r\n}\r\n\r\nexport const setLoginSuccess = () => {\r\n    return {\r\n        type: 'SET_LOGIN_SUCCESS'\r\n    };\r\n}\r\n\r\nexport const setLoginError = () => {\r\n    return {\r\n        type: 'SET_LOGIN_ERROR'\r\n    };\r\n}*/\r\n\r\nexport function loginUser(username:any, password:any) {\r\n    axios.get(\"https://localhost:44391/api/Auth?username=\" + username + \"&password=\" + password)\r\n        .then(response => {\r\n            \r\n            console.log(response.data);\r\n            if (response.data !== \"Invalid credentials\") {\r\n                const token = response.data;\r\n            } else {\r\n               \r\n            }\r\n        })\r\n        .catch(error => {\r\n            \r\n        })\r\n    return {\r\n        type: 'LOGIN_USER'\r\n        //payload: token\r\n    };\r\n\r\n}\r\n\r\n\r\nexport const setLogin = () => {\r\n    return {\r\n        type: 'LOGIN_USER'\r\n    };\r\n}\r\n\r\nexport const setLogout = () => {\r\n    return {\r\n        type: 'LOGOUT_USER'\r\n    };\r\n}\r\n//============================DASHBOARD ACTION===========================\r\n\r\nexport const setDashboardSuccess = () => {\r\n    return {\r\n        type: SET_DASHBOARD_SUCCESS\r\n    };\r\n}\r\n\r\nexport const setDashboardError = () => {\r\n    return {\r\n        type: SET_DASHBOARD_ERROR\r\n    };\r\n}\r\n\r\n//===========================COUNTER ACTION=========================\r\nexport const increment = () => {\r\n    return {\r\n        type: 'INCREMENT'\r\n    };\r\n}\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: 'DECREMENT'\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}