{"ast":null,"code":"const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nconst SET_DASHBOARD_ERROR = 'SET_DASHBOARD_ERROR';\nconst SET_DASHBOARD_SUCCESS = 'SET_DASHBOARD_SUCCESS'; //export const setLoginPending = (isLoginPending: boolean)=> {\n//    return {\n//        type: SET_LOGIN_PENDING,\n//        isLoginPending\n//    };\n//}\n//export const setLoginSuccess=(isLoginSuccess: boolean)=> {\n//    return {\n//        type: SET_LOGIN_SUCCESS,\n//        isLoginSuccess\n//    };\n//}\n//export const setLoginError=(loginError: any) =>{\n//    return {\n//        type: SET_LOGIN_ERROR,\n//        loginError\n//    };\n//}\n\n/*export const setLoginLoad = () => {\r\n    return {\r\n        type: 'SET_LOGIN_Load'\r\n    };\r\n}\r\n\r\nexport const setLoginSuccess = () => {\r\n    return {\r\n        type: 'SET_LOGIN_SUCCESS'\r\n    };\r\n}\r\n\r\nexport const setLoginError = () => {\r\n    return {\r\n        type: 'SET_LOGIN_ERROR'\r\n    };\r\n}*/\n\n/*export function loginUser(username:any, password:any) {\r\n    axios.get(\"https://localhost:44391/api/Auth?username=\" + username + \"&password=\" + password)\r\n        .then(response => {\r\n            \r\n            console.log(response.data);\r\n            if (response.data !== \"Invalid credentials\") {\r\n                var token = response.data;\r\n            } else {\r\n               \r\n            }\r\n        })\r\n        .catch(error => {\r\n            \r\n        })\r\n    return {\r\n        type: 'LOGIN_USER',\r\n        payload: token\r\n    };\r\n\r\n}*/\n\nexport const setLogin = jwttoken => {\n  return {\n    type: 'LOGIN_USER',\n    payload: jwttoken\n  };\n};\nexport const setLoginError = () => {\n  return {\n    type: 'LOGIN_ERR',\n    payload: null\n  };\n};\nexport const setLogout = () => {\n  return {\n    type: 'LOGOUT_USER',\n    payload: null\n  };\n}; //============================DASHBOARD ACTION===========================\n\nexport const setDashboardSuccess = () => {\n  return {\n    type: SET_DASHBOARD_SUCCESS\n  };\n};\nexport const setDashboardError = () => {\n  return {\n    type: SET_DASHBOARD_ERROR\n  };\n}; //===========================COUNTER ACTION=========================\n\nexport const increment = () => {\n  return {\n    type: 'INCREMENT'\n  };\n};\nexport const decrement = () => {\n  return {\n    type: 'DECREMENT'\n  };\n};","map":{"version":3,"sources":["D:/login/src/actions/index.tsx"],"names":["SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","SET_DASHBOARD_ERROR","SET_DASHBOARD_SUCCESS","setLogin","jwttoken","type","payload","setLoginError","setLogout","setDashboardSuccess","setDashboardError","increment","decrement"],"mappings":"AAIA,MAAMA,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAGA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,qBAAqB,GAAG,uBAA9B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAkB;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAE,YADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAKH,CANM;AAOP,OAAO,MAAMG,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHF,IAAAA,IAAI,EAAE,WADH;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP;AAKH,CANM;AAQP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHH,IAAAA,IAAI,EAAE,aADH;AAEHC,IAAAA,OAAO,EAAC;AAFL,GAAP;AAIH,CALM,C,CAMP;;AAEA,OAAO,MAAMG,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHJ,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMQ,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHL,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMU,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHN,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMO,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHP,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios';\r\n\r\n\r\n\r\nconst SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\n\r\nconst SET_DASHBOARD_ERROR = 'SET_DASHBOARD_ERROR';\r\nconst SET_DASHBOARD_SUCCESS = 'SET_DASHBOARD_SUCCESS';\r\n\r\n\r\n//export const setLoginPending = (isLoginPending: boolean)=> {\r\n//    return {\r\n//        type: SET_LOGIN_PENDING,\r\n//        isLoginPending\r\n//    };\r\n//}\r\n\r\n//export const setLoginSuccess=(isLoginSuccess: boolean)=> {\r\n//    return {\r\n//        type: SET_LOGIN_SUCCESS,\r\n//        isLoginSuccess\r\n//    };\r\n//}\r\n\r\n//export const setLoginError=(loginError: any) =>{\r\n//    return {\r\n//        type: SET_LOGIN_ERROR,\r\n//        loginError\r\n//    };\r\n//}\r\n\r\n/*export const setLoginLoad = () => {\r\n    return {\r\n        type: 'SET_LOGIN_Load'\r\n    };\r\n}\r\n\r\nexport const setLoginSuccess = () => {\r\n    return {\r\n        type: 'SET_LOGIN_SUCCESS'\r\n    };\r\n}\r\n\r\nexport const setLoginError = () => {\r\n    return {\r\n        type: 'SET_LOGIN_ERROR'\r\n    };\r\n}*/\r\n\r\n/*export function loginUser(username:any, password:any) {\r\n    axios.get(\"https://localhost:44391/api/Auth?username=\" + username + \"&password=\" + password)\r\n        .then(response => {\r\n            \r\n            console.log(response.data);\r\n            if (response.data !== \"Invalid credentials\") {\r\n                var token = response.data;\r\n            } else {\r\n               \r\n            }\r\n        })\r\n        .catch(error => {\r\n            \r\n        })\r\n    return {\r\n        type: 'LOGIN_USER',\r\n        payload: token\r\n    };\r\n\r\n}*/\r\n\r\n\r\nexport const setLogin = (jwttoken:any) => {\r\n    return {\r\n        type: 'LOGIN_USER',\r\n        payload: jwttoken\r\n    };\r\n\r\n}\r\nexport const setLoginError = () => {\r\n    return {\r\n        type: 'LOGIN_ERR',\r\n        payload: null\r\n    };\r\n\r\n}\r\n\r\nexport const setLogout = () => {\r\n    return {\r\n        type: 'LOGOUT_USER',\r\n        payload:null\r\n    };\r\n}\r\n//============================DASHBOARD ACTION===========================\r\n\r\nexport const setDashboardSuccess = () => {\r\n    return {\r\n        type: SET_DASHBOARD_SUCCESS\r\n    };\r\n}\r\n\r\nexport const setDashboardError = () => {\r\n    return {\r\n        type: SET_DASHBOARD_ERROR\r\n    };\r\n}\r\n\r\n//===========================COUNTER ACTION=========================\r\nexport const increment = () => {\r\n    return {\r\n        type: 'INCREMENT'\r\n    };\r\n}\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: 'DECREMENT'\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}