{"ast":null,"code":"var _jsxFileName = \"D:\\\\login\\\\src\\\\context\\\\TaskListContext.tsx\";\nimport React, { useState } from 'react';\nimport { createContext } from 'react';\nimport uuid from 'uuid'; //const defaultlist: { title: string, id: number }[] = [];\n\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = props => {\n  const [tasks, setTasks] = useState([{\n    title: \"read book\",\n    id: 1\n  }, {\n    title: \"cook food\",\n    id: 2\n  }, {\n    title: \"do some code\",\n    id: 3\n  }]);\n  const [editItem, setEditItem] = useState(null); // Add tasks\n\n  const addTask = title => {\n    setTasks([...tasks, {\n      title,\n      id: uuid()\n    }]);\n  }; // Remove tasks\n\n\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; // Clear tasks\n\n\n  const clearList = () => {\n    setTasks([]);\n  }; // Find task\n\n\n  const findItem = id => {\n    const item = tasks.find(task => task.id === id);\n    setEditItem(item);\n  }; // Edit task\n\n\n  const editTask = (title, id) => {\n    const newTasks = tasks.map(task => task.id === id ? {\n      title,\n      id\n    } : task);\n    console.log(newTasks);\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  return /*#__PURE__*/React.createElement(TaskListContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      removeTask,\n      clearList,\n      findItem,\n      editTask,\n      editItem\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default TaskListContextProvider;","map":{"version":3,"sources":["D:/login/src/context/TaskListContext.tsx"],"names":["React","useState","createContext","uuid","TaskListContext","TaskListContextProvider","props","tasks","setTasks","title","id","editItem","setEditItem","addTask","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAGF,aAAa,EAArC;;AAGP,MAAMG,uBAAuB,GAAIC,KAAD,IAA6B;AAC5D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAClC;AAAEQ,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,EAAE,EAAE;AAA1B,GADkC,EAElC;AAAED,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,EAAE,EAAE;AAA1B,GAFkC,EAGlC;AAAED,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,EAAE,EAAE;AAA7B,GAHkC,CAAD,CAAlC;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC,CAP4D,CASzD;;AACA,QAAMY,OAAO,GAAIJ,KAAD,IAAgB;AAC5BD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEE,MAAAA,KAAF;AAASC,MAAAA,EAAE,EAAEP,IAAI;AAAjB,KAAX,CAAD,CAAR;AACH,GAFD,CAVyD,CAczD;;;AACA,QAAMW,UAAU,GAAIJ,EAAD,IAAa;AAC5BF,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,GAFD,CAfyD,CAmBzD;;;AACA,QAAMO,SAAS,GAAG,MAAM;AACpBT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAFD,CApByD,CAwBzD;;;AACA,QAAMU,QAAQ,GAAIR,EAAD,IAAa;AAC1B,UAAMS,IAAI,GAAGZ,KAAK,CAACa,IAAN,CAAWJ,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAA/B,CAAb;AAEAE,IAAAA,WAAW,CAACO,IAAD,CAAX;AACH,GAJD,CAzByD,CA+BzD;;;AACA,QAAME,QAAQ,GAAG,CAACZ,KAAD,EAAaC,EAAb,KAAyB;AACtC,UAAMY,QAAQ,GAAGf,KAAK,CAACgB,GAAN,CAAUP,IAAI,IAAKA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAAiB;AAAED,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB,GAAiCM,IAApD,CAAjB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAd,IAAAA,QAAQ,CAACc,QAAD,CAAR;AACAV,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAPD;;AASA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHL,MAAAA,KADG;AAEHM,MAAAA,OAFG;AAGHC,MAAAA,UAHG;AAIHG,MAAAA,SAJG;AAKHC,MAAAA,QALG;AAMHG,MAAAA,QANG;AAOHV,MAAAA;AAPG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKL,KAAK,CAACoB,QAXX,CADJ;AAeH,CAxDD;;AA0DA,eAAerB,uBAAf","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { createContext } from 'react';\r\nimport uuid from 'uuid';\r\n\r\n//const defaultlist: { title: string, id: number }[] = [];\r\nexport const TaskListContext = createContext();\r\n\r\n\r\nconst TaskListContextProvider = (props: {children : any} )=> {\r\n\tconst [tasks, setTasks] = useState([\r\n\t\t{ title: \"read book\", id: 1 },\r\n\t\t{ title: \"cook food\", id: 2 },\r\n\t\t{ title: \"do some code\", id: 3 }\r\n\r\n\t]);\r\n\tconst [editItem, setEditItem] = useState(null)\r\n\r\n    // Add tasks\r\n    const addTask = (title: any) => {\r\n        setTasks([...tasks, { title, id: uuid() }])\r\n    };\r\n\r\n    // Remove tasks\r\n    const removeTask = (id: any) => {\r\n        setTasks(tasks.filter(task => task.id !== id))\r\n    };\r\n\r\n    // Clear tasks\r\n    const clearList = () => {\r\n        setTasks([])\r\n    };\r\n\r\n    // Find task\r\n    const findItem = (id: any) => {\r\n        const item = tasks.find(task => task.id === id)\r\n\r\n        setEditItem(item)\r\n    };\r\n\r\n    // Edit task\r\n    const editTask = (title: any, id: any) => {\r\n        const newTasks = tasks.map(task => (task.id === id ? { title, id } : task))\r\n\r\n        console.log(newTasks)\r\n\r\n        setTasks(newTasks)\r\n        setEditItem(null)\r\n    };\r\n\r\n    return (\r\n        <TaskListContext.Provider\r\n            value={{\r\n                tasks,\r\n                addTask,\r\n                removeTask,\r\n                clearList,\r\n                findItem,\r\n                editTask,\r\n                editItem\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TaskListContext.Provider>\r\n    );\r\n}\r\n\r\nexport default TaskListContextProvider;"]},"metadata":{},"sourceType":"module"}