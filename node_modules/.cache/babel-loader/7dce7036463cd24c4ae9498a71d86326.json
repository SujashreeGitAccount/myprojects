{"ast":null,"code":"const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\n\nconst loginReducer = () => (state, action) => {\n  switch (action.type) {\n    case SET_LOGIN_SUCCESS:\n      return !state;\n\n    case SET_LOGIN_ERROR:\n      return state;\n\n    default:\n      return state;\n  }\n}; //const loginReducer = () => (state = {\n//    isLoginPending: false,\n//    isLoginSuccess: false,\n//    loginError: null\n//}, action: { type: any; isLoginPending: boolean; isLoginSuccess: boolean; loginError: any; }) => {\n//    switch (action.type) {\n//        case SET_LOGIN_PENDING:\n//            return Object.assign({}, state, {\n//                isLoginPending: action.isLoginPending\n//            });\n//        case SET_LOGIN_SUCCESS:\n//            return Object.assign({}, state, {\n//                isLoginSuccess: action.isLoginSuccess\n//            });\n//        case SET_LOGIN_ERROR:\n//            return Object.assign({}, state, {\n//                loginError: action.loginError\n//            });\n//        default:\n//            return state;\n//    }\n//}\n\n\nexport default loginReducer;","map":{"version":3,"sources":["E:/login/src/reducer/login/loginReducer.tsx"],"names":["SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","loginReducer","state","action","type"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;;AAEA,MAAMC,YAAY,GAAG,MAAM,CAACC,KAAD,EAAeC,MAAf,KAA8B;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKL,iBAAL;AACI,aAAO,CAACG,KAAR;;AAEJ,SAAKF,eAAL;AACI,aAAOE,KAAP;;AAEJ;AACI,aAAOA,KAAP;AATR;AAWH,CAZD,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA,eAAeD,YAAf","sourcesContent":["const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\nconst loginReducer = () => (state :false, action:any) => {\r\n    switch (action.type) {\r\n        \r\n        case SET_LOGIN_SUCCESS:\r\n            return !state;\r\n\r\n        case SET_LOGIN_ERROR:\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//const loginReducer = () => (state = {\r\n//    isLoginPending: false,\r\n//    isLoginSuccess: false,\r\n//    loginError: null\r\n//}, action: { type: any; isLoginPending: boolean; isLoginSuccess: boolean; loginError: any; }) => {\r\n//    switch (action.type) {\r\n//        case SET_LOGIN_PENDING:\r\n//            return Object.assign({}, state, {\r\n//                isLoginPending: action.isLoginPending\r\n//            });\r\n//        case SET_LOGIN_SUCCESS:\r\n//            return Object.assign({}, state, {\r\n//                isLoginSuccess: action.isLoginSuccess\r\n//            });\r\n\r\n//        case SET_LOGIN_ERROR:\r\n//            return Object.assign({}, state, {\r\n//                loginError: action.loginError\r\n//            });\r\n\r\n//        default:\r\n//            return state;\r\n//    }\r\n//}\r\n\r\n\r\nexport default loginReducer;"]},"metadata":{},"sourceType":"module"}